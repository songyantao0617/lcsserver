package com.pxccn.PxcDali2.server.database.mapper;

import com.pxccn.PxcDali2.server.database.model.CabinetV2;
import com.pxccn.PxcDali2.server.database.model.CabinetV2Example;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface CabinetV2Mapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cabinet_V2
     *
     * @mbg.generated Wed Oct 12 09:14:04 CST 2022
     */
    @SelectProvider(type=CabinetV2SqlProvider.class, method="countByExample")
    long countByExample(CabinetV2Example example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cabinet_V2
     *
     * @mbg.generated Wed Oct 12 09:14:04 CST 2022
     */
    @DeleteProvider(type=CabinetV2SqlProvider.class, method="deleteByExample")
    int deleteByExample(CabinetV2Example example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cabinet_V2
     *
     * @mbg.generated Wed Oct 12 09:14:04 CST 2022
     */
    @Delete({
        "delete from cabinet_V2",
        "where cabinet_ID = #{cabinetId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer cabinetId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cabinet_V2
     *
     * @mbg.generated Wed Oct 12 09:14:04 CST 2022
     */
    @Insert({
        "insert into cabinet_V2 (cabinet_ID, syncFlag, ",
        "name, ip_address, ",
        "description, version, ",
        "lastAlive, lastSync, ",
        "location_building, location_floor, ",
        "location_zone, axis_x, ",
        "axis_y, axis_z)",
        "values (#{cabinetId,jdbcType=INTEGER}, #{syncflag,jdbcType=BIT}, ",
        "#{name,jdbcType=NVARCHAR}, #{ipAddress,jdbcType=VARCHAR}, ",
        "#{description,jdbcType=NVARCHAR}, #{version,jdbcType=NVARCHAR}, ",
        "#{lastalive,jdbcType=TIMESTAMP}, #{lastsync,jdbcType=TIMESTAMP}, ",
        "#{locationBuilding,jdbcType=NVARCHAR}, #{locationFloor,jdbcType=NVARCHAR}, ",
        "#{locationZone,jdbcType=NVARCHAR}, #{axisX,jdbcType=INTEGER}, ",
        "#{axisY,jdbcType=INTEGER}, #{axisZ,jdbcType=INTEGER})"
    })
    int insert(CabinetV2 row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cabinet_V2
     *
     * @mbg.generated Wed Oct 12 09:14:04 CST 2022
     */
    @InsertProvider(type=CabinetV2SqlProvider.class, method="insertSelective")
    int insertSelective(CabinetV2 row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cabinet_V2
     *
     * @mbg.generated Wed Oct 12 09:14:04 CST 2022
     */
    @SelectProvider(type=CabinetV2SqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="cabinet_ID", property="cabinetId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="syncFlag", property="syncflag", jdbcType=JdbcType.BIT),
        @Result(column="name", property="name", jdbcType=JdbcType.NVARCHAR),
        @Result(column="ip_address", property="ipAddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="description", property="description", jdbcType=JdbcType.NVARCHAR),
        @Result(column="version", property="version", jdbcType=JdbcType.NVARCHAR),
        @Result(column="lastAlive", property="lastalive", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="lastSync", property="lastsync", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="location_building", property="locationBuilding", jdbcType=JdbcType.NVARCHAR),
        @Result(column="location_floor", property="locationFloor", jdbcType=JdbcType.NVARCHAR),
        @Result(column="location_zone", property="locationZone", jdbcType=JdbcType.NVARCHAR),
        @Result(column="axis_x", property="axisX", jdbcType=JdbcType.INTEGER),
        @Result(column="axis_y", property="axisY", jdbcType=JdbcType.INTEGER),
        @Result(column="axis_z", property="axisZ", jdbcType=JdbcType.INTEGER)
    })
    List<CabinetV2> selectByExample(CabinetV2Example example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cabinet_V2
     *
     * @mbg.generated Wed Oct 12 09:14:04 CST 2022
     */
    @Select({
        "select",
        "cabinet_ID, syncFlag, name, ip_address, description, version, lastAlive, lastSync, ",
        "location_building, location_floor, location_zone, axis_x, axis_y, axis_z",
        "from cabinet_V2",
        "where cabinet_ID = #{cabinetId,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="cabinet_ID", property="cabinetId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="syncFlag", property="syncflag", jdbcType=JdbcType.BIT),
        @Result(column="name", property="name", jdbcType=JdbcType.NVARCHAR),
        @Result(column="ip_address", property="ipAddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="description", property="description", jdbcType=JdbcType.NVARCHAR),
        @Result(column="version", property="version", jdbcType=JdbcType.NVARCHAR),
        @Result(column="lastAlive", property="lastalive", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="lastSync", property="lastsync", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="location_building", property="locationBuilding", jdbcType=JdbcType.NVARCHAR),
        @Result(column="location_floor", property="locationFloor", jdbcType=JdbcType.NVARCHAR),
        @Result(column="location_zone", property="locationZone", jdbcType=JdbcType.NVARCHAR),
        @Result(column="axis_x", property="axisX", jdbcType=JdbcType.INTEGER),
        @Result(column="axis_y", property="axisY", jdbcType=JdbcType.INTEGER),
        @Result(column="axis_z", property="axisZ", jdbcType=JdbcType.INTEGER)
    })
    CabinetV2 selectByPrimaryKey(Integer cabinetId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cabinet_V2
     *
     * @mbg.generated Wed Oct 12 09:14:04 CST 2022
     */
    @UpdateProvider(type=CabinetV2SqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("row") CabinetV2 row, @Param("example") CabinetV2Example example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cabinet_V2
     *
     * @mbg.generated Wed Oct 12 09:14:04 CST 2022
     */
    @UpdateProvider(type=CabinetV2SqlProvider.class, method="updateByExample")
    int updateByExample(@Param("row") CabinetV2 row, @Param("example") CabinetV2Example example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cabinet_V2
     *
     * @mbg.generated Wed Oct 12 09:14:04 CST 2022
     */
    @UpdateProvider(type=CabinetV2SqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(CabinetV2 row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cabinet_V2
     *
     * @mbg.generated Wed Oct 12 09:14:04 CST 2022
     */
    @Update({
        "update cabinet_V2",
        "set syncFlag = #{syncflag,jdbcType=BIT},",
          "name = #{name,jdbcType=NVARCHAR},",
          "ip_address = #{ipAddress,jdbcType=VARCHAR},",
          "description = #{description,jdbcType=NVARCHAR},",
          "version = #{version,jdbcType=NVARCHAR},",
          "lastAlive = #{lastalive,jdbcType=TIMESTAMP},",
          "lastSync = #{lastsync,jdbcType=TIMESTAMP},",
          "location_building = #{locationBuilding,jdbcType=NVARCHAR},",
          "location_floor = #{locationFloor,jdbcType=NVARCHAR},",
          "location_zone = #{locationZone,jdbcType=NVARCHAR},",
          "axis_x = #{axisX,jdbcType=INTEGER},",
          "axis_y = #{axisY,jdbcType=INTEGER},",
          "axis_z = #{axisZ,jdbcType=INTEGER}",
        "where cabinet_ID = #{cabinetId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(CabinetV2 row);
}